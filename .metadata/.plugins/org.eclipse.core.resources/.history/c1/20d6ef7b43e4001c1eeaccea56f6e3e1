 /******************************************************************************
 *
 * Module: Ultrasonic
 *
 * File Name: ultrasonic.c
 *
 * Description: Source file for the Ultrasonic driver
 *
  * Author: Omar Adel
 *
 *******************************************************************************/

#include "gpio.h"
#include "icu.h"
#include "ultrasonic.h"
#include "common_macros.h" /* To use the macros like SET_BIT */


void Ultrasonic_init(void){
	Icu_ConfigType config = {F_CPU_8,RISING};
	Icu_init(&config);
	Icu_setCallBack(Ultrasonic_edgeProcessing);
	GPIO_setupPinDirection(PORTB_ID, PIN5_ID, PIN_OUTPUT);
	GPIO_setupPinDirection(PORTD_ID, PIN6_ID, PIN_INPUT);

}

void Ultrasonic_Trigger(void){
	GPIO_writePin(PORTB_ID, PIN5_ID,LOGIC_HIGH);
}

uint16 Ultrasonic_readDistance(void){
	Ultrasonic_Trigger();
	return 17000*g_timeHigh;
}

void Ultrasonic_edgeProcessing(void){
		g_edgeCount++;
		if(g_edgeCount == 1)
		{
			/*
			 * Clear the timer counter register to start measurements from the
			 * first detected rising edge
			 */
			Icu_clearTimerValue();
			/* Detect falling edge */
			Icu_setEdgeDetectionType(FALLING);
		}
		else if(g_edgeCount == 2)
		{
			/* Store the High time value */
			g_timeHigh = Icu_getInputCaptureValue();
			/* Detect rising edge */
			Icu_setEdgeDetectionType(RISING);
		}
		else if(g_edgeCount == 3)
		{
			/* Store the Period time value */
			g_timePeriod = Icu_getInputCaptureValue();
			/* Detect falling edge */
			Icu_setEdgeDetectionType(FALLING);
		}
		else if(g_edgeCount == 4)
		{
			/* Store the Period time value + High time value */
			g_timePeriodPlusHigh = Icu_getInputCaptureValue();
			/* Clear the timer counter register to start measurements again */
			Icu_clearTimerValue();
			/* Detect rising edge */
			Icu_setEdgeDetectionType(RISING);
		}

}
